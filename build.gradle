//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
plugins {
	id "maven-publish"
	alias libs.plugins.loom
	alias libs.plugins.minotaur
}

version = "$project.baseVersion+$project.branch"
archivesBaseName = project.archivesName

repositories {
	maven { url "https://server.bbkr.space/artifactory/libs-release" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
	minecraft libs.mc
	mappings variantOf(libs.yarn) { classifier "v2" }
	modImplementation libs.fl
	modImplementation libs.fapi
	modImplementation libs.libgui
	modImplementation libs.fpapi

	include libs.libgui
	include libs.fpapi
}

processResources {
	final Map<String, String> meta = [
		version       : version,
		modId         : modId,
		modName       : modName,
		modDescription: modDescription,
		homepage      : homepage,
		issues        : issues,
		sources       : sources,
		license       : license,
		authors       : authors.split(", ").join("\",\n    \""),
		contributors  : contributors.split(", ").join("\",\n    \""),
		mc            : libs.versions.mc.get(),
		fl            : libs.versions.fl.get(),
		fapi          : libs.versions.fapi.get(),
		libgui        : libs.versions.libgui.get(),
		fpapi         : libs.versions.fpapi.get()
	]
	inputs.properties meta
	filesMatching("fabric.mod.json") { expand meta }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "scattered-shards"
	dependencies {
		required.version "fabric-api", libs.versions.fapi.get()
		embedded.version "fabric-permissions-api", libs.versions.fpapi.get()
	}
	changelog = System.getenv("CHANGELOG")
	syncBodyFrom = "<!--DO NOT EDIT MANUALLY: synced from gh readme-->\n" + rootProject.file("README.md").text
	uploadFile = remapJar
}
